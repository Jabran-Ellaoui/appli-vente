drop database supermarche_db;
CREATE DATABASE supermarche_db;
USE supermarche_db;

CREATE TABLE locality (
    postal_code INT,
    locality VARCHAR(100) NOT NULL,
    PRIMARY KEY (postal_code, locality)
);


CREATE TABLE customer (
    id INT PRIMARY KEY,
    lastname VARCHAR(100) NOT NULL,
    firstname VARCHAR(100) NOT NULL,
    address VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_number VARCHAR(20),
    fidelity_point_nb INT DEFAULT 0 CHECK (fidelity_point_nb >= 0),
    region_postal_code INT,
    region_locality VARCHAR(100),
    FOREIGN KEY (region_postal_code, region_locality) REFERENCES locality(postal_code, locality)
);


CREATE TABLE employee (
    id INT PRIMARY KEY,
    lastname VARCHAR(100) NOT NULL,
    firstname VARCHAR(100) NOT NULL,
    phone_number VARCHAR(20)
);

CREATE TABLE lot (
    number INT PRIMARY KEY,
    provenance VARCHAR(100) NOT NULL,
    reception_date DATE NOT NULL,
    manager INT,
    FOREIGN KEY (manager) REFERENCES employee(id)
);

CREATE TABLE product_model (
    barcode VARCHAR(50) PRIMARY KEY,
    label VARCHAR(100) NOT NULL,
    eco_score VARCHAR(5) CHECK (eco_score IN ('A', 'B', 'C', 'D', 'E')),
    fidelity_point_nb INT DEFAULT 0 CHECK (fidelity_point_nb >= 0),
    required_age INT CHECK (required_age IS NULL OR required_age >= 0),
    kept_warm BOOLEAN NOT NULL,
    kept_cold BOOLEAN NOT NULL,
    expiration_date DATE NOT NULL,
    weight FLOAT NOT NULL CHECK (weight > 0),
    storage_temperature FLOAT,
    provenance INT,
    FOREIGN KEY (provenance) REFERENCES lot(number)
);

CREATE TABLE sales_detail (
    id INT PRIMARY KEY,
    quantity INT NOT NULL CHECK (quantity > 0),
    fidelity_points_used BOOLEAN,
    payment_method VARCHAR(50),
    comment TEXT,
    date DATE NOT NULL,
    buyer_id INT,
    seller_id INT,
    FOREIGN KEY (buyer_id) REFERENCES customer(id),
    FOREIGN KEY (seller_id) REFERENCES employee(id)
);

CREATE TABLE product (
    id INT PRIMARY KEY,
    unit_price DECIMAL(10,2) NOT NULL CHECK (unit_price > 0),
    promotion_percentage DECIMAL(5,2) CHECK (promotion_percentage IS NULL OR (promotion_percentage >= 0 AND promotion_percentage <= 100)),
    model_barcode VARCHAR(50) NOT NULL,
    sale INT,
    FOREIGN KEY (model_barcode) REFERENCES product_model(barcode),
    FOREIGN KEY (sale) REFERENCES sales_detail(id)
);

